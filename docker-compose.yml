services:
  adonis_backend:
    container_name: adonis_backend
    restart: always
    image: crzgames/website_backend:develop
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    ports:
      - '3333:3333'
    depends_on:
      - database_mariadb
      - phpmyadmin
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
      
  minio-s3:
    container_name: minio-s3
    restart: always
    image: minio/minio
    volumes:
      - bucket_s3:/data
    ports:
      - '9000:9000' # API CloudStorage S3
      - '9001:9001' # UI Dashboard
    environment:
      MINIO_ROOT_USER: minio_access_key
      MINIO_ROOT_PASSWORD: minio_secret_key
    command: server --console-address :9001 /data
    networks:
      - app-network

  miniomc-s3:
    container_name: miniomc-s3
    restart: on-failure
    image: minio/mc
    entrypoint: |
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio-s3:9000 minio_access_key minio_secret_key;
      if ! /usr/bin/mc ls myminio/crzgames-private > /dev/null 2>&1; then
        /usr/bin/mc mb myminio/crzgames-private;
        /usr/bin/mc anonymous set none myminio/crzgames-private;
      fi
      if ! /usr/bin/mc ls myminio/crzgames-public > /dev/null 2>&1; then
        /usr/bin/mc mb myminio/crzgames-public;
        /usr/bin/mc anonymous set download myminio/crzgames-public;
      fi
      exit 0;
      "
    depends_on:
      - minio-s3
    networks:
      - app-network

  database_mariadb:
    container_name: database_mariadb
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: crzgames_develop
      MYSQL_USER: adonis
      MYSQL_PASSWORD: adonis
    ports:
      - '3306:3306'
    volumes:
      - database_data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: database_mariadb
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - '8080:80'
    networks:
      - app-network

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    logging:
      driver: 'none' # disable saving logs
    environment:
      - MH_USERNAME=support@develop.crzgames.com
      - MH_PASSWORD=fakepassword
    ports:
      - '1025:1025' # smtp server
      - '8025:8025' # web ui
    networks:
      - app-network

networks:
  app-network:

volumes:
  database_data:
  app:
  node_modules:
  bucket_s3:
